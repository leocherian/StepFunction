{
    "StartAt": "Find Duplicates",
    "States": {
        "Find Duplicates": {
            "Next": "How many duplicates?",
            "Retry": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "MaxAttempts": 4,
                    "BackoffRate": 5
                }
            ],
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "ResultPath": "$.error",
                    "Next": "HandleErrorTask"
                }
            ],
            "Parameters": {
                "inputEvent.$": "$.inputEvent"
            },
            "Type": "Task",
            "Resource": "arn:aws:lambda:us-east-1:123456789123:function:lambda1",
            "ResultPath": "$.matches"
        },
        "How many duplicates?": {
            "Type": "Choice",
            "Choices": [
                {
                    "Variable": "$.matches.count",
                    "NumericEquals": 0,
                    "Next": "Create Item"
                },
                {
                    "Variable": "$.matches.count",
                    "NumericEquals": 1,
                    "Next": "Get Item"
                },
                {
                    "Variable": "$.matches.count",
                    "NumericGreaterThan": 1,
                    "Next": "Handle many Items"
                }
            ]
        },
        "Create Item": {
            "Next": "ProcessOne",
            "Retry": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "MaxAttempts": 4,
                    "BackoffRate": 5
                }
            ],
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "ResultPath": "$.error",
                    "Next": "HandleErrorTask"
                }
            ],
            "Parameters": {
                "inputEvent.$": "$.inputEvent"
            },
            "Type": "Task",
            "Resource": "arn:aws:lambda:us-east-1:123456789123:function:lambda2",
            "ResultPath": "$.result"
        },
        "ProcessFour": {
            "Next": "ProcessFive",
            "Retry": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "MaxAttempts": 4,
                    "BackoffRate": 5
                }
            ],
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "ResultPath": "$.error",
                    "Next": "HandleErrorTask"
                }
            ],
            "Parameters": {
                "inputEvent.$": "$.inputEvent",
                "result.$": "$.result",
                "update.$": "$.update"
            },
            "Type": "Task",
            "Resource": "arn:aws:lambda:us-east-1:123456789123:function:lambda3",
            "ResultPath": "$.result"
        },
        "ProcessParallel": {
            "Type": "Parallel",
            "Next": "WaitState",
            "Branches": [
                {
                    "StartAt": "ProcessParallelOne",
                    "States": {
                        "ProcessParallelOne": {
                            "Type": "Task",
                            "Resource": "arn:aws:lambda:us-east-1:123456789123:function:lambda4",
                            "End": true
                        }
                    }
                },
                {
                    "StartAt": "ProcessParallelTwo",
                    "States": {
                        "ProcessParallelTwo": {
                            "Type": "Task",
                            "Resource": "arn:aws:lambda:us-east-1:123456789123:function:lambda5",
                            "End": true
                        }
                    }
                }
            ]
        },
        "ProcessTwo": {
            "Type": "Pass",
            "Result": true,
            "ResultPath": "$.processedEvent",
            "Next": "ProcessFour"
        },
        "ProcessOneSuccess?": {
            "Type": "Choice",
            "Choices": [
                {
                    "Variable": "$.update.hasUpdatedTraits",
                    "BooleanEquals": true,
                    "Next": "ProcessParallel"
                },
                {
                    "Variable": "$.update.hasUpdatedTraits",
                    "BooleanEquals": false,
                    "Next": "ProcessThree"
                }
            ]
        },
        "WaitState": {
            "Type": "Wait",
            "Seconds": 10,
            "Next": "ProcessTwo"
        },
        "ProcessOne": {
            "Next": "ProcessOneSuccess?",
            "Parameters": {
                "inputEvent.$": "$.inputEvent",
                "resultId.$": "$.matches.resultId"
            },
            "Type": "Task",
            "Resource": "arn:aws:lambda:us-east-1:123456789123:function:lambda6",
            "ResultPath": "$.update"
        },
        "Handle many Items": {
            "Next": "ProcessOne",
            "Retry": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "MaxAttempts": 4,
                    "BackoffRate": 5
                }
            ],
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "ResultPath": "$.error",
                    "Next": "HandleErrorTask"
                }
            ],
            "Parameters": {
                "inputEvent.$": "$.inputEvent",
                "resultIds.$": "$.matches.ids"
            },
            "Type": "Task",
            "Resource": "arn:aws:lambda:us-east-1:123456789123:function:lambda7",
            "ResultPath": "$.matches.resultId"
        },
        "HandleErrorTask": {
            "End": true,
            "Retry": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "MaxAttempts": 4,
                    "BackoffRate": 5
                }
            ],
            "Type": "Task",
            "Resource": "arn:aws:lambda:us-east-1:123456789123:function:lambda8"
        },
        "ProcessFive": {
            "Next": "ProcessEnd",
            "Retry": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "MaxAttempts": 4,
                    "BackoffRate": 5
                }
            ],
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "ResultPath": "$.error",
                    "Next": "HandleErrorTask"
                }
            ],
            "Parameters": {
                "inputEvent.$": "$.inputEvent",
                "result.$": "$.result"
            },
            "Type": "Task",
            "Resource": "arn:aws:lambda:us-east-1:123456789123:function:lambda9",
            "ResultPath": null
        },
        "ProcessThree": {
            "Type": "Pass",
            "Result": false,
            "ResultPath": "$.processedEvent",
            "Next": "ProcessFive"
        },
        "ProcessEnd": {
            "End": true,
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "ResultPath": "$.error",
                    "Next": "HandleErrorTask"
                }
            ],
            "Parameters": {
                "inputEvent.$": "$.inputEvent",
                "result.$": "$.result",
                "processedEvent.$": "$.processedEvent"
            },
            "Type": "Task",
            "Resource": "arn:aws:lambda:us-east-1:123456789123:function:lambda10"
        },
        "Get Item": {
            "Type": "Pass",
            "ResultPath": "$.matches.resultId",
            "InputPath": "$.matches.ids[0]",
            "Next": "ProcessOne"
        }
    }
}
